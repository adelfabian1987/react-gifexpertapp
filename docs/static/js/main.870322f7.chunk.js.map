{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiffGridItem.js","components/GiffGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","peticion","json","data","gifs","map","img","id","title","images","downsized_medium","GiffGridItem","className","src","alt","GiffGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACC,+BACF,EAGRC,EANY,kBAEF,+BAFE,cAMkBC,UAAWH,GAN7B,kBAGJ,EAHI,oBACH,oCADG,SAOKI,MAAMF,GAPX,cAOZG,EAPY,gBAQKA,EAASC,OARd,uBAQVC,EARU,EAQVA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAfvB,kBAkBXM,GAlBW,4CAAH,sDCWJO,EATM,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAC5B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,kCAAMA,EAAN,WCFCO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAIvB,ECLwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK3B,CAAEpB,IAEGqB,EDfuBK,CAAc1B,GAAhCa,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QACnB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEcnBgB,EA1BM,SAAAC,GAEjB,MAAqC1C,mBAAS,CAAC,cAA/C,mBAAQ2C,EAAR,KAAoB5C,EAApB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWpB,KAAK,SAAAqB,GAAS,OACrB,cAAC,EAAD,CAEI9B,SAAW8B,GADLA,QAMtB,2B,MClBZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.870322f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {   \r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{        \r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategorias(cats=>[ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }        \r\n    }\r\n    \r\n    return (    \r\n        <form onSubmit={ handleSubmit }>\r\n            <input                 \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGif = async( category ) => {\r\n    const apikey = 'wbepnz8gUs26C1hYl9umJgeAOhukA4rD';\r\n    const gif_url = 'api.giphy.com/v1/gifs/search';\r\n    const limit = 3;\r\n    //const peticion = fetch(`http://${gif_url}?api_key=${apikey}`);\r\n\r\n    const url = `https://${gif_url}?q=${encodeURI( category )}&limit=${limit}&api_key=${apikey}`;\r\n    const peticion = await fetch(url);\r\n    const { data } = await peticion.json();\r\n\r\n    //console.log(data);\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });        \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GiffGridItem = ( { title, url } ) => {   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiffGridItem","import React, { /* useState, useEffect*/ } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GiffGridItem from './GiffGridItem';\r\n\r\nexport const GiffGrid = ({ category }) => {   \r\n    \r\n   // const [image, setImage] = useState([]);\r\n\r\n    const {data:images,loading} = useFetchGifs( category );  \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3> \r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }         \r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                    <GiffGridItem \r\n                        key={ img.id } \r\n                        { ...img } \r\n                    />\r\n                ))\r\n            }    \r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })   \r\n    \r\n    useEffect( ()=>{       \r\n        \r\n        getGif( category )\r\n            .then(imgs =>{\r\n                //setTimeout(()=>{\r\n                    setState({ \r\n                        data: imgs,\r\n                        loading: false\r\n                    });            \r\n                //},500)                \r\n            })\r\n\r\n    },[ category ])  \r\n\r\n    return state; // {data:[], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiffGrid } from './components/GiffGrid';\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = props => {   \r\n    \r\n    const [ categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr />                   \r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => \r\n                        <GiffGrid \r\n                            key={ categoria }\r\n                            category={ categoria } \r\n                        /> \r\n                    )\r\n                }\r\n            </ol>\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n/*GifExpertApp.propTypes = {\r\n}*/\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n//import './animate.min.css'\n\nReactDOM.render(  \n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}